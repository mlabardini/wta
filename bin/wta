#!/usr/bin/env ruby

require 'wta'
require 'colorize'
require 'optparse'

# Default to North America Region

opt_region = "NA"
opt_all_status = false
ARGV.options do |opts|
  opts.on("-r", "--region=val", String, "Select region NA, SA, EU, AP. Defaults to NA") { |val| opt_region = val.upcase}
  opts.on("-a", "--all", "Include services that are operating normally in the listing") { opt_all_status = true }
  opts.on("-s", "--summary", "Add a summary header for services") { opt_summary = true }
  opts.parse!
end

unless Wta.regions.include?(opt_region)
  puts "Unknown region (#{region}), should be one of #{Wta.regions}"
  exit 1
end

reds = Wta.reds(opt_region)
yellows = Wta.yellows(opt_region)
infos = Wta.infos(opt_region)

puts("Service disruption: #{reds.length} ".black_on_red) unless reds.empty?
puts("Performance issues: #{yellows.length} ".black.on_yellow) unless yellows.empty?
puts("Informational messages: #{infos.length} ".light_blue) unless infos.empty?

greens = opt_all_status ? Wta.operating(opt_region) : []

puts("Operationing normally: #{greens.length} ".green) unless greens.empty? 

reds.each_with_index { |r, inx|
  str = sprintf "%3i", inx + 1
  puts "#{str}:  #{r}".black.on_red
}

yellows.each_with_index { |y, inx|
  str = sprintf "%3i", inx + 1
  puts "#{str}:  #{y}".black.on_yellow
}

infos.each_with_index { |i, inx|
  str = sprintf "%3i", inx + 1
  puts "#{str}:  #{i}".light_blue
}

if (opt_all_status)
  greens.each_with_index { |i, inx|
    str = sprintf "%3i", inx + 1
    puts "#{str}:  #{i}".green
  }
end

